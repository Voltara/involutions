#include "corner_hash.h"

constexpr uint64_t P = 0x7fffffff;
constexpr uint64_t A = 0x5d99b6;

static uint32_t H[] = {
	0x00049585, 0x0009c207, 0x005ccfa9, 0x00076717, 0x00319e2c, 0x0049cd0a, 0x0007b0a5, 0x0008aa2b,
	0x01d488bb, 0x0001f88b, 0x00019d25, 0x00101369, 0x0001f93d, 0x0083cbbe, 0x001feca9, 0x046848fb,
	0x00257257, 0x002809a9, 0x00aeb01b, 0x00b8d5d7, 0x0024d085, 0x0009b39a, 0x0118a0eb, 0x002b410c,
	0x00135513, 0x002b4ba9, 0x00070acd, 0x002c7d21, 0x0007e7d3, 0x00157907, 0x00711662, 0x0098e886,
	0x000693b2, 0x00e56226, 0x001850b9, 0x0001380d, 0x007191f6, 0x00036156, 0x0009d75f, 0x0005b82e,
	0x00b0afba, 0x0017dfd7, 0x163744b8, 0x095a17fd, 0x00056381, 0x000f87cb, 0x000cb921, 0x002df597,
	0x0011809b, 0x0005908d, 0x00e54529, 0x000042d3, 0x00082a11, 0x012449dd, 0x005a63fe, 0x007bb85b,
	0x0140de1a, 0x0133054f, 0x00194a91, 0x00574e1b, 0x011c778f, 0x0001bb87, 0x001bba3e, 0x000b2605,
	0x021d5009, 0x014b512e, 0x0057a751, 0x000a4e29, 0x001d36a3, 0x000a4336, 0x000e259b, 0x0021c00b,
	0x047c7312, 0x0029108f, 0x0199da27, 0x000b299e, 0x000ca641, 0x00077bc2, 0x003506a2, 0x00e38f81,
	0x0033010f, 0x0333fe9f, 0x0115d9c8, 0x021c74a4, 0x00a580eb, 0x002d2481, 0x0558c492, 0x000ad892,
	0x000fc759, 0x0012ef7b, 0x000a1262, 0x00f814ae, 0x01f09f65, 0x0051d486, 0x0078238f, 0x020b1210,
	0x000bfe87, 0x0008fa9a, 0x0005a8ec, 0x00014919, 0x00edc430, 0x0139104a, 0x01b02e21, 0x00017291,
	0x002b478b, 0x00255292, 0x0004319d, 0x0016e4fb, 0x000fef82, 0x005398db, 0x006d939f, 0x0286f698,
	0x001b904e, 0x001878d6, 0x00941389, 0x00191d05, 0x01f8f1ac, 0x00070fa5, 0x008b873f, 0x00383a07,
	0x00067e4e, 0x00d67ec7, 0x0027cd2c, 0x006bd95e, 0x00476a91, 0x00818f2f, 0x00078a07, 0x010fc341,
};

static uint16_t corner_hash(uint32_t cp, uint32_t co) {
	uint64_t n = (cp << 12) | co;
	uint32_t h0 = A * n % P % 128;
	uint32_t h1 = H[h0] * n % P % 512;
	return (h0 << 9) | h1;
}

uint16_t corner_hash(ccoord cc) {
	auto [ cp, co ] = cc.real();
	return corner_hash(cp, co);
}
